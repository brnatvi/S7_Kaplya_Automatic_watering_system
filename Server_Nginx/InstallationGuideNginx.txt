! arrosage.zip and arrosage.sql are required for installation
! In the guide, nano is used to edit files


Install MariaDB :
sudo apt install mariadb-server mariadb-client

To set database server password : (remember root password)
sudo mysql -u root

After logging into the MySQL prompt, run the following commands one by one:
use mysql;
update user set plugin='' where User='root';
flush privileges;
\q

Run next command :
mysql_secure_installation
Press Enter after next lines :
Enter current password for root (enter for none): # Press ENTER
Set root password? [Y/n] # Press ENTER

Enter password

Press Enter to accept the default values :
Remove anonymous users? [Y/n] # Press ENTER
Disallow root login remotely? [Y/n] # Press ENTER
Remove test database and access to it? [Y/n] # Press ENTER
Reload privilege tables now? [Y/n] # Press ENTER

Create a database user : (remember username and password for further installation)
sudo mysql -u root -p
CREATE USER 'username'@localhost IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON . TO 'username'@localhost IDENTIFIED BY 'password';

Save the password to connect to the database from the site:
sudo nano /var/www/vars.php

Insert next code with new database password :
<?php
$login = 'admin';
$password = 'INSERT PASSWORD';
?>

Install Nginx : 
sudo apt-get install nginx

You can verify installation of Nginx (must be active) :
sudo systemctl status nginx

Intall MySQLi extension for php
sudo apt-get install php-mysqli

Extract archive arrosage to var/www (you should get var/www/arrosage/'files')
sudo unzip Server_Nginx/arrosage.zip -d var/www/

Create database : (using root password; be attentive to the spaces in the path)
sudo mysql -u root -p < /path/to/db.sql

Install PHP with PHP-FPM : (For debian users, read (1) )
sudo apt-get install php7.4-fpm

You can verify installation of PHP (must be active) :
sudo systemctl status php7.4-fpm

To set server password, install :
sudo apt install apache2-utils

Set server password :
sudo htpasswd -c /etc/nginx/htpasswd admin

Create a server block with the correct directives : 
sudo nano /etc/nginx/sites-available/arrosage

Insert next code :
server {
        listen 80;
        listen [::]:80;

        root /var/www/arrosage;
        index index.php index.html index.htm index.nginx-debian.html;

        server_name localhost;

        location / {
				auth_basic "Restricted";
				auth_basic_user_file /etc/nginx/htpasswd;
                try_files $uri $uri/ =404;
        }
		
        location ~ \.php$ {
                include snippets/fastcgi-php.conf;

                # Nginx php-fpm sock config:
                fastcgi_pass unix:/run/php/php-fpm.sock;
        }
}

Create a link to the sites-enabled directory : 
sudo ln -s /etc/nginx/sites-available/arrosage /etc/nginx/sites-enabled/

Test Nginx files :
sudo nginx -t

Restart nginx :
sudo systemctl restart nginx

Now you can open localhost and use the server









(1)
PHP 7.4 installation on Debian :

Download and store PPA repository :
sudo apt -y install lsb-release apt-transport-https ca-certificates
sudo wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg

Add repository :
echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/php.list

Update system package list :
sudo apt update

sudo apt-get install php7.4-fpm